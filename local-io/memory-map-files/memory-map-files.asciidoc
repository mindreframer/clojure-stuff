=== Memory-mapping a File
[role="byline"]
by Alan Busby

==== Problem

You want to use memory-mapping to access a large file as though it
were fully loaded into memory, without actually loading the whole thing.

==== Solution

Use the https://github.com/thebusby/clj-mmap[+clj-mmap+] library,
which wraps the memory mapping functionality provided by Java's NIO library.

Before starting, add `[clj-mmap "1.1.2"]` to your project’s dependen‐
cies or start a REPL using +lein-try+:

[source,shell]
----
$ lein try clj-mmap
----

[source,clojure]
----
(require '[clj-mmap :as mmap])
----

To read the first and last N bytes of UTF-8 encoded text file, use the
+get-bytes+ function:

[source,clojure]
----
(with-open [file (mmap/get-mmap "/path/to/file/file.txt")]
  (let [n-bytes       10
        file-size     (.size file)
        first-n-bytes (mmap/get-bytes file 0 n-bytes)
        last-n-bytes  (mmap/get-bytes file (- file-size n-bytes) n-bytes)]
    [(String. first-n-bytes "UTF-8")
     (String. last-n-bytes  "UTF-8")]))
----

To overwrite the first N bytes of a text file, call +put-bytes+:

[source,clojure]
----
(with-open [file (mmap/get-mmap "/path/to/file/file.txt")]
  (let [bytes-to-write (.getBytes "New text goes here" "UTF-8")
        file-size      (.size file)]
    (if (> file-size
           (alength bytes-to-write))
      (mmap/put-bytes file bytes-to-write 0))))
----

==== Discussion

Memory-mapping, or 'mmap' per the POSIX standard, is a method to
leverage the operating system's virtual memory to perform file IO.
By mapping the file into the applications memory space, copying
between buffers is reduced, and I/O performance is increased.

Memory-mapped files are especially useful when working with large files,
structured binary data, or text files where Java's String overhead may be
unwelcome.

While Clojure makes it simple to work with Java's NIO primitives directly,
NIO makes working with files larger than 2GB especially difficult. +clj-mmap+
wraps this complexity, but at the same time doesn't expose all the features
that NIO does. The NIO Java api is still available via interop, should it be needed.

==== See Also

* The http://en.wikipedia.org/wiki/Mmap[mmap Wikipedia article].
* The +clj-mmap+ https://github.com/thebusby/clj-mmap[GitHub repository].
